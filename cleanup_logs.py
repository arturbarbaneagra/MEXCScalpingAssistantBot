
#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
"""

import os
import glob
import time
from datetime import datetime, timedelta

def cleanup_logs():
    """–û—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏"""
    print("üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –ª–æ–≥–æ–≤...")
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–æ—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ª–æ–≥–∏ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
    cutoff_time = time.time() - (7 * 24 * 3600)
    
    log_patterns = [
        "trading_bot.log.*",
        "*.log.backup",
        "bot_log_*.log"
    ]
    
    deleted_count = 0
    for pattern in log_patterns:
        for log_file in glob.glob(pattern):
            try:
                if os.path.getmtime(log_file) < cutoff_time:
                    size_mb = os.path.getsize(log_file) / 1024 / 1024
                    os.remove(log_file)
                    print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω: {log_file} ({size_mb:.1f} MB)")
                    deleted_count += 1
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {log_file}: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ª–æ–≥–∞
    if os.path.exists("trading_bot.log"):
        size_mb = os.path.getsize("trading_bot.log") / 1024 / 1024
        print(f"üìä –û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥: trading_bot.log ({size_mb:.1f} MB)")
        
        if size_mb > 45:  # –ï—Å–ª–∏ –±–æ–ª—å—à–µ 45MB, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ä–æ—Ç–∏—Ä—É–µ–º
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            backup_name = f"trading_bot.log.{timestamp}.rotated"
            try:
                os.rename("trading_bot.log", backup_name)
                print(f"  üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–æ—Ç–∞—Ü–∏—è: {backup_name}")
            except Exception as e:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏: {e}")
    
    print(f"‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {deleted_count}")

if __name__ == "__main__":
    cleanup_logs()
